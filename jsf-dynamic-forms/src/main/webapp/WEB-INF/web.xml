<?xml version="1.0" encoding="UTF-8"?>
<!--
	* Licensed to the Apache Software Foundation (ASF) under one
	* or more contributor license agreements.  See the NOTICE file
	* distributed with this work for additional information
	* regarding copyright ownership.  The ASF licenses this file
	* to you under the Apache License, Version 2.0 (the
	* "License"); you may not use this file except in compliance
	* with the License.  You may obtain a copy of the License at
	*
	*   http://www.apache.org/licenses/LICENSE-2.0
	*
	* Unless required by applicable law or agreed to in writing,
	* software distributed under the License is distributed on an
	* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
	* KIND, either express or implied.  See the License for the
	* specific language governing permissions and limitations
	* under the License.
-->
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:javaee="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd" version="2.4">
  <javaee:description>MyProject web.xml</javaee:description>
  <context-param>
    <javaee:param-name>org.jboss.jbossfaces.WAR_BUNDLES_JSF_IMPL</javaee:param-name>
    <javaee:param-value>true</javaee:param-value>
  </context-param>
  <context-param>
    <javaee:param-name>facelets.LIBRARIES</javaee:param-name>
    <javaee:param-value>/WEB-INF/tomahawk.taglib.xml</javaee:param-value>
  </context-param>
  <context-param>
    <javaee:param-name>javax.faces.DEFAULT_SUFFIX</javaee:param-name>
    <javaee:param-value>.xhtml</javaee:param-value>
  </context-param>
  <context-param>
    <javaee:param-name>facelets.DEVELOPMENT</javaee:param-name>
    <javaee:param-value>true</javaee:param-value>
  </context-param>
  <context-param>
    <javaee:description>
			Comma separated list of URIs of (additional) faces config
			files. (e.g. /WEB-INF/my-config.xml) See JSF 1.0 PRD2,
			10.3.2 Attention: You do not need to put
			/WEB-INF/faces-config.xml in here.
		</javaee:description>
    <javaee:param-name>javax.faces.CONFIG_FILES</javaee:param-name>
    <javaee:param-value>/WEB-INF/examples-config.xml</javaee:param-value>
  </context-param>
  <context-param>
    <javaee:description>
			State saving method: &quot;client&quot; or &quot;server&quot; (= default) See
			JSF Specification 2.5.3
		</javaee:description>
    <javaee:param-name>javax.faces.STATE_SAVING_METHOD</javaee:param-name>
    <javaee:param-value>client</javaee:param-value>
  </context-param>
  <context-param>
    <javaee:description>
			Only applicable if state saving method is &quot;server&quot; (=
			default). Defines the amount (default = 20) of the latest
			views are stored in session.
		</javaee:description>
    <javaee:param-name>org.apache.myfaces.NUMBER_OF_VIEWS_IN_SESSION</javaee:param-name>
    <javaee:param-value>20</javaee:param-value>
  </context-param>
  <context-param>
    <javaee:description>
			Only applicable if state saving method is &quot;server&quot; (=
			default). If true (default) the state will be serialized to
			a byte stream before it is written to the session. If false
			the state will not be serialized to a byte stream.
		</javaee:description>
    <javaee:param-name>org.apache.myfaces.SERIALIZE_STATE_IN_SESSION</javaee:param-name>
    <javaee:param-value>true</javaee:param-value>
  </context-param>
  <context-param>
    <javaee:description>
			Only applicable if state saving method is &quot;server&quot; (=
			default) and if
			org.apache.myfaces.SERIALIZE_STATE_IN_SESSION is true (=
			default) If true (default) the serialized state will be
			compressed before it is written to the session. If false the
			state will not be compressed.
		</javaee:description>
    <javaee:param-name>org.apache.myfaces.COMPRESS_STATE_IN_SESSION</javaee:param-name>
    <javaee:param-value>true</javaee:param-value>
  </context-param>
  <context-param>
    <javaee:description>
			This parameter tells MyFaces if javascript code should be
			allowed in the rendered HTML output. If javascript is
			allowed, command_link anchors will have javascript code that
			submits the corresponding form. If javascript is not
			allowed, the state saving info and nested parameters will be
			added as url parameters. Default: &quot;true&quot;
		</javaee:description>
    <javaee:param-name>org.apache.myfaces.ALLOW_JAVASCRIPT</javaee:param-name>
    <javaee:param-value>true</javaee:param-value>
  </context-param>
  <context-param>
    <javaee:param-name>org.apache.myfaces.DETECT_JAVASCRIPT</javaee:param-name>
    <javaee:param-value>false</javaee:param-value>
  </context-param>
  <context-param>
    <javaee:description>
			If true, rendered HTML code will be formatted, so that it is
			&quot;human readable&quot;. i.e. additional line separators and
			whitespace will be written, that do not influence the HTML
			code. Default: &quot;true&quot;
		</javaee:description>
    <javaee:param-name>org.apache.myfaces.PRETTY_HTML</javaee:param-name>
    <javaee:param-value>true</javaee:param-value>
  </context-param>
  <context-param>
    <javaee:description>
			If true, a javascript function will be rendered that is able
			to restore the former vertical scroll on every request.
			Convenient feature if you have pages with long lists and you
			do not want the browser page to always jump to the top if
			you trigger a link or button action that stays on the same
			page. Default: &quot;false&quot;
		</javaee:description>
    <javaee:param-name>org.apache.myfaces.AUTO_SCROLL</javaee:param-name>
    <javaee:param-value>true</javaee:param-value>
  </context-param>
  <context-param>
    <javaee:description>
			Used for encrypting view state. Only relevant for client
			side state saving. See MyFaces wiki/web site documentation
			for instructions on how to configure an application for
			diffenent encryption strengths.
		</javaee:description>
    <javaee:param-name>org.apache.myfaces.SECRET</javaee:param-name>
    <javaee:param-value>NzY1NDMyMTA=</javaee:param-value>
  </context-param>
  <context-param>
    <javaee:description>
			Validate managed beans, navigation rules and ensure that
			forms are not nested.
		</javaee:description>
    <javaee:param-name>org.apache.myfaces.VALIDATE</javaee:param-name>
    <javaee:param-value>true</javaee:param-value>
  </context-param>
  <context-param>
    <javaee:description>
			Treat readonly same as if disabled attribute was set for
			select elements.
		</javaee:description>
    <javaee:param-name>org.apache.myfaces.READONLY_AS_DISABLED_FOR_SELECTS</javaee:param-name>
    <javaee:param-value>true</javaee:param-value>
  </context-param>
  <context-param>
    <javaee:description>
			Use the defined class as the class which will be called when
			a resource is added to the ExtensionFilter handling. Using
			StreamingAddResource here helps with performance. If you
			want to add custom components and want to use the
			ExtensionFilter, you need to provide your custom
			implementation here.
		</javaee:description>
    <javaee:param-name>org.apache.myfaces.ADD_RESOURCE_CLASS</javaee:param-name>
    <javaee:param-value>
			org.apache.myfaces.renderkit.html.util.DefaultAddResource
		</javaee:param-value>
  </context-param>
  <context-param>
    <javaee:description>
			Virtual path in the URL which triggers loading of resources
			for the MyFaces extended components in the ExtensionFilter.
		</javaee:description>
    <javaee:param-name>org.apache.myfaces.RESOURCE_VIRTUAL_PATH</javaee:param-name>
    <javaee:param-value>/faces/myFacesExtensionResource</javaee:param-value>
  </context-param>
  <context-param>
    <javaee:description>
			Check if the extensions-filter has been properly configured.
		</javaee:description>
    <javaee:param-name>org.apache.myfaces.CHECK_EXTENSIONS_FILTER</javaee:param-name>
    <javaee:param-value>true</javaee:param-value>
  </context-param>
  <context-param>
    <javaee:description>
			Define partial state saving as true/false.
		</javaee:description>
    <javaee:param-name>javax.faces.PARTIAL_STATE_SAVING_METHOD</javaee:param-name>
    <javaee:param-value>false</javaee:param-value>
  </context-param>
  <filter>
    <filter-name>extensionsFilter</filter-name>
    <filter-class>
			org.apache.myfaces.webapp.filter.ExtensionsFilter
		</filter-class>
    <init-param>
      <javaee:description>
				Set the size limit for uploaded files. Format: 10 - 10
				bytes 10k - 10 KB 10m - 10 MB 1g - 1 GB
			</javaee:description>
      <javaee:param-name>uploadMaxFileSize</javaee:param-name>
      <javaee:param-value>100m</javaee:param-value>
    </init-param>
    <init-param>
      <javaee:description>
				Set the threshold size - files below this limit are
				stored in memory, files above this limit are stored on
				disk.

				Format: 10 - 10 bytes 10k - 10 KB 10m - 10 MB 1g - 1 GB
			</javaee:description>
      <javaee:param-name>uploadThresholdSize</javaee:param-name>
      <javaee:param-value>100k</javaee:param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>extensionsFilter</filter-name>
    <url-pattern>*.jsf</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>extensionsFilter</filter-name>
    <url-pattern>/faces/*</url-pattern>
  </filter-mapping>
  <listener>
    <javaee:listener-class>
			org.apache.myfaces.webapp.StartupServletContextListener
		</javaee:listener-class>
  </listener>
  <servlet>
    <servlet-name>Faces Servlet</servlet-name>
    <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>Faces Servlet</servlet-name>
    <url-pattern>*.jsf</url-pattern>
  </servlet-mapping>
  <welcome-file-list>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>index.html</welcome-file>
  </welcome-file-list>
</web-app>